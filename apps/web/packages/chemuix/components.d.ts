/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
import {
  EventBody,
  Node,
} from "./components/reaction-pathway/reaction-pathway";
import { DataMapperType } from "./components/reaction-pathway/tests/reaction-pathway-wrapper";
export {
  EventBody,
  Node,
} from "./components/reaction-pathway/reaction-pathway";
export { DataMapperType } from "./components/reaction-pathway/tests/reaction-pathway-wrapper";
export namespace Components {
  /**
   * The reaction pathway component renders a reaction
   * pathway from a list of nodes (molecules and reactions)
   * using a tree layout algorithm and a 3D rendering engine.
   */
  interface ReactionPathway {
    /**
     * Enables the honeycomb rendering of the molecules
     * @type {boolean}
     * @default false
     */
    displayHoneycomb: boolean;
    /**
     * Disables the pathway rendering
     * @type {boolean}
     * @default false
     */
    displayPathway: boolean;
    /**
     * Enables the reaction condition rendering under the reaction nodes
     * @type {boolean}
     * @default false
     */
    displayReactionCondition: boolean;
    /**
     * Enables the reaction name rendering under the reaction nodes
     * @type {boolean}
     * @default false
     */
    displayReactionName: boolean;
    /**
     * Enables the book icon rendering under the reaction nodes
     * @type {boolean}
     * @default false
     */
    displayReactionReference: boolean;
    /**
     * Enables the score rendering of the molecules
     * @type {boolean}
     * @default false
     */
    displayScore: boolean;
    /**
     * Enables the 3D view of the reaction pathway
     * @type {boolean}
     * @default false
     */
    enable3D: boolean;
    /**
     * The nodes of the reaction pathway
     * @type {PropNode[]}
     * @required
     */
    nodes: Omit<Node, "boundingBox">[];
    /**
     * Allows to zoom in the reaction pathway
     * @param zoomSpeed - The zoom speed of the camera
     */
    zoomIn: (zoomSpeed?: number) => Promise<void>;
    /**
     * Allows to zoom out the reaction pathway
     * @param zoomSpeed - The zoom speed of the camera
     */
    zoomOut: (zoomSpeed?: number) => Promise<void>;
    /**
     * Allows to reset position and zoom levels of the reaction pathway
     */
    zoomReset: () => Promise<void>;
  }
  interface ReactionPathwayTestWrapper {
    displayHoneycomb: boolean;
    displayPathway: boolean;
    displayReactionCondition: boolean;
    displayReactionName: boolean;
    displayReactionReference: boolean;
    displayScore: boolean;
    enable3D: boolean;
    type: DataMapperType;
  }
}
export interface ReactionPathwayCustomEvent<T> extends CustomEvent<T> {
  detail: T;
  target: HTMLReactionPathwayElement;
}
declare global {
  /**
   * The reaction pathway component renders a reaction
   * pathway from a list of nodes (molecules and reactions)
   * using a tree layout algorithm and a 3D rendering engine.
   */
  interface HTMLReactionPathwayElement
    extends Components.ReactionPathway,
      HTMLStencilElement {}
  var HTMLReactionPathwayElement: {
    prototype: HTMLReactionPathwayElement;
    new (): HTMLReactionPathwayElement;
  };
  interface HTMLReactionPathwayTestWrapperElement
    extends Components.ReactionPathwayTestWrapper,
      HTMLStencilElement {}
  var HTMLReactionPathwayTestWrapperElement: {
    prototype: HTMLReactionPathwayTestWrapperElement;
    new (): HTMLReactionPathwayTestWrapperElement;
  };
  interface HTMLElementTagNameMap {
    "reaction-pathway": HTMLReactionPathwayElement;
    "reaction-pathway-test-wrapper": HTMLReactionPathwayTestWrapperElement;
  }
}
declare namespace LocalJSX {
  /**
   * The reaction pathway component renders a reaction
   * pathway from a list of nodes (molecules and reactions)
   * using a tree layout algorithm and a 3D rendering engine.
   */
  interface ReactionPathway {
    /**
     * Enables the honeycomb rendering of the molecules
     * @type {boolean}
     * @default false
     */
    displayHoneycomb?: boolean;
    /**
     * Disables the pathway rendering
     * @type {boolean}
     * @default false
     */
    displayPathway?: boolean;
    /**
     * Enables the reaction condition rendering under the reaction nodes
     * @type {boolean}
     * @default false
     */
    displayReactionCondition?: boolean;
    /**
     * Enables the reaction name rendering under the reaction nodes
     * @type {boolean}
     * @default false
     */
    displayReactionName?: boolean;
    /**
     * Enables the book icon rendering under the reaction nodes
     * @type {boolean}
     * @default false
     */
    displayReactionReference?: boolean;
    /**
     * Enables the score rendering of the molecules
     * @type {boolean}
     * @default false
     */
    displayScore?: boolean;
    /**
     * Enables the 3D view of the reaction pathway
     * @type {boolean}
     * @default false
     */
    enable3D?: boolean;
    /**
     * The nodes of the reaction pathway
     * @type {PropNode[]}
     * @required
     */
    nodes?: Omit<Node, "boundingBox">[];
    "onReaction-pathway-click"?: (
      event: ReactionPathwayCustomEvent<EventBody>
    ) => void;
  }
  interface ReactionPathwayTestWrapper {
    displayHoneycomb?: boolean;
    displayPathway?: boolean;
    displayReactionCondition?: boolean;
    displayReactionName?: boolean;
    displayReactionReference?: boolean;
    displayScore?: boolean;
    enable3D?: boolean;
    type?: DataMapperType;
  }
  interface IntrinsicElements {
    "reaction-pathway": ReactionPathway;
    "reaction-pathway-test-wrapper": ReactionPathwayTestWrapper;
  }
  declare namespace JSX {
    interface IntrinsicElements {
      "reaction-pathway": any; // Replace 'my-component' with your actual Stencil component name
      // Add other custom components as needed
    }
  }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
  export namespace JSX {
    interface IntrinsicElements {
      /**
       * The reaction pathway component renders a reaction
       * pathway from a list of nodes (molecules and reactions)
       * using a tree layout algorithm and a 3D rendering engine.
       */
      "reaction-pathway": LocalJSX.ReactionPathway &
        JSXBase.HTMLAttributes<HTMLReactionPathwayElement>;
      "reaction-pathway-test-wrapper": LocalJSX.ReactionPathwayTestWrapper &
        JSXBase.HTMLAttributes<HTMLReactionPathwayTestWrapperElement>;
    }
  }
}

declare global {
  namespace JSX {
    interface IntrinsicElements {
      "reaction-pathway": any; // Replace 'my-component' with your actual Stencil component name
      // Add other custom components as needed
    }
  }
}
