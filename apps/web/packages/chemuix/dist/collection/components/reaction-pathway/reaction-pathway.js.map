{"version":3,"file":"reaction-pathway.js","sourceRoot":"","sources":["../../../src/components/reaction-pathway/reaction-pathway.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, Prop, h, getAssetPath, Event, EventEmitter, Listen, Element, Method } from \"@stencil/core\";\r\nimport { HierarchyPointNode } from \"d3\";\r\nimport * as d3 from \"d3\";\r\nimport { SVGLoader, SVGResultPaths } from \"three/examples/jsm/loaders/SVGLoader\";\r\nimport { CSS2DRenderer } from \"three/examples/jsm/renderers/CSS2DRenderer\";\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { TextGeometry } from \"three/examples/jsm/geometries/TextGeometry\";\r\nimport { LineGeometry } from \"three/examples/jsm/lines/LineGeometry\";\r\nimport { LineMaterial } from \"three/examples/jsm/lines/LineMaterial\";\r\nimport { Line2 } from \"three/examples/jsm/lines/Line2\";\r\nimport Helvetiker from \"three/examples/fonts/helvetiker_regular.typeface.json\";\r\nimport HelvetikerBold from \"three/examples/fonts/helvetiker_bold.typeface.json\";\r\nimport { FontLoader, Font } from \"three/examples/jsm/loaders/FontLoader\";\r\nimport * as THREE from \"three\";\r\nimport { Molecule as MoleculeLib } from \"openchemlib/minimal\";\r\n\r\nexport type Molecule = {\r\n  id: string;\r\n  parentId?: string;\r\n  type: \"molecule\";\r\n  smiles: string;\r\n  score?: string;\r\n  isInInventory?: boolean;\r\n  isProtected?: boolean;\r\n  isRegulated?: boolean;\r\n  publishedMoleculeCount?: number;\r\n  boundingBox?: THREE.Vector3;\r\n};\r\n\r\nexport type Reaction = {\r\n  id: string;\r\n  parentId: string;\r\n  type: \"reaction\";\r\n  name?: string;\r\n  condition?: string;\r\n  score?: 1 | 2 | 3;\r\n  doi?: string;\r\n  reactionCount?: number;\r\n};\r\n\r\nexport type Node = Molecule | Reaction;\r\n\r\nexport type EventBody = {\r\n  node: Node;\r\n  eventSource: EventSource;\r\n};\r\n\r\nexport type Coordinate = {\r\n  x: number;\r\n  y: number;\r\n};\r\n\r\nexport type SVGIconName = (typeof SVG_ICONS)[number];\r\n\r\n/**\r\n * The SVG icons of the reaction pathway component\r\n * @readonly\r\n * @enum {string}\r\n */\r\nconst SVG_ICONS = [\"book\", \"reference_1\", \"reference_2\", \"reference_3\", \"exclamation\", \"shield\", \"flask\"] as const;\r\n\r\n/**\r\n * The default width of a node\r\n */\r\nconst NODE_WIDTH = 150;\r\n\r\n/**\r\n * The default height of a node\r\n */\r\nconst NODE_HEIGHT = 200;\r\n\r\n/**\r\n * The default separation between nodes\r\n */\r\nconst TREE_SEPARATION = 1;\r\n\r\n/**\r\n * The default offset of a reaction node\r\n */\r\nconst REACTION_NODE_X_OFFSET = 85;\r\n\r\n/**\r\n * The default radius of a line curve\r\n */\r\nconst LINE_CURVE_RADIUS = 5;\r\n\r\n/**\r\n * The default radius of a hexagon\r\n */\r\nconst HEXAGON_RADIUS = 10;\r\n\r\n/**\r\n * The default radius of a honeycomb badge\r\n */\r\nconst HONEYCOMB_BADGE_RADIUS = 5;\r\n\r\n/**\r\n * The default size of the reference icon\r\n */\r\nconst REFERENCE_ICON_SIZE = 30;\r\n\r\n/**\r\n * The default size of the inventory icon\r\n */\r\nconst INVENTORY_ICON_SIZE = 30;\r\n\r\n/**\r\n * The default zoom speed of the camera\r\n */\r\nconst CAMERA_ZOOM_SPEED = 0.2;\r\n\r\n/**\r\n * The reaction pathway component renders a reaction\r\n * pathway from a list of nodes (molecules and reactions)\r\n * using a tree layout algorithm and a 3D rendering engine.\r\n */\r\n@Component({\r\n  tag: \"reaction-pathway\",\r\n  styleUrl: \"reaction-pathway.css\",\r\n  shadow: true,\r\n  assetsDirs: [\"assets\"],\r\n})\r\nexport class ReactionPathway {\r\n  internalNodes: Node[] = [];\r\n  container: HTMLDivElement;\r\n  scene: THREE.Scene;\r\n  camera: THREE.OrthographicCamera;\r\n  renderer: THREE.WebGLRenderer;\r\n  controls: OrbitControls;\r\n  svgLoader: SVGLoader;\r\n  fontLoader: FontLoader;\r\n  tree: HierarchyPointNode<Node>;\r\n  helvetiker: Font;\r\n  helvetikerBold: Font;\r\n  iconCache: Record<SVGIconName, string> = {} as Record<SVGIconName, string>;\r\n  iconObjectCache: Record<SVGIconName, THREE.Object3D> = {} as Record<SVGIconName, THREE.Object3D>;\r\n  objectBoundingBoxCache: Record<string, THREE.Box3> = {};\r\n  raycaster: THREE.Raycaster;\r\n  mouse: THREE.Vector2;\r\n\r\n  @Element() element!: HTMLElement;\r\n\r\n  /**\r\n   * The nodes of the reaction pathway\r\n   * @type {PropNode[]}\r\n   * @required\r\n   */\r\n  @Prop() nodes: Omit<Node, \"boundingBox\">[] = [];\r\n\r\n  /**\r\n   * Enables the 3D view of the reaction pathway\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() enable3D: boolean = false;\r\n\r\n  /**\r\n   * Enables the score rendering of the molecules\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() displayScore: boolean = true;\r\n\r\n  /**\r\n   * Enables the honeycomb rendering of the molecules\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() displayHoneycomb: boolean = true;\r\n\r\n  /**\r\n   * Disables the pathway rendering\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() displayPathway: boolean = true;\r\n\r\n  /**\r\n   * Enables the book icon rendering under the reaction nodes\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() displayReactionReference: boolean = true;\r\n\r\n  /**\r\n   * Enables the reaction name rendering under the reaction nodes\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() displayReactionName: boolean = true;\r\n\r\n  /**\r\n   * Enables the reaction condition rendering under the reaction nodes\r\n   * @type {boolean}\r\n   * @default false\r\n   */\r\n  @Prop() displayReactionCondition: boolean = true;\r\n\r\n  @Event({ eventName: \"reaction-pathway-click\" }) click: EventEmitter<EventBody>;\r\n\r\n  async componentWillLoad() {\r\n    if (this.nodes.length === 0) return;\r\n\r\n    this.svgLoader = new SVGLoader();\r\n\r\n    this.internalNodes = this.nodes as Node[];\r\n\r\n    await this.loadSVGIcons();\r\n\r\n    const hierarchy = d3\r\n      .stratify<Node>()\r\n      .id(node => node.id)\r\n      .parentId(node => node.parentId)(this.internalNodes);\r\n\r\n    this.tree = d3\r\n      .tree<Node>()\r\n      .size([1000, 1000])\r\n      .nodeSize([NODE_WIDTH, NODE_HEIGHT])\r\n      .separation(() => TREE_SEPARATION)(hierarchy)\r\n      .each(node => {\r\n        const { x, y } = node;\r\n        node.x = -y;\r\n        node.y = x;\r\n\r\n        if (node.data.type === \"reaction\")\r\n          this.internalNodes.filter(({ parentId }) => parentId === node.data.id).length > 1 && (node.x -= REACTION_NODE_X_OFFSET);\r\n      });\r\n  }\r\n\r\n  componentDidLoad() {\r\n    if (this.nodes.length === 0) return;\r\n    this.renderReactionPathway(this.tree);\r\n  }\r\n\r\n  @Listen(\"pointerdown\")\r\n  handlePointerDown(event: MouseEvent) {\r\n    this.mouse.x = (event.offsetX / this.renderer.domElement.clientWidth) * 2 - 1;\r\n    this.mouse.y = -(event.offsetY / this.renderer.domElement.clientHeight) * 2 + 1;\r\n  }\r\n\r\n  @Listen(\"pointerup\")\r\n  handlePointerUp(event: MouseEvent) {\r\n    if (\r\n      this.mouse.x !== (event.offsetX / this.renderer.domElement.clientWidth) * 2 - 1 ||\r\n      this.mouse.y !== -(event.offsetY / this.renderer.domElement.clientHeight) * 2 + 1\r\n    )\r\n      return;\r\n\r\n    this.mouse.x = (event.offsetX / this.renderer.domElement.clientWidth) * 2 - 1;\r\n    this.mouse.y = -(event.offsetY / this.renderer.domElement.clientHeight) * 2 + 1;\r\n\r\n    this.raycaster.setFromCamera(this.mouse, this.camera);\r\n\r\n    const object = this.scene.children.find(child => {\r\n      let boundingBox = this.objectBoundingBoxCache[child.uuid];\r\n\r\n      if (!boundingBox) {\r\n        boundingBox = new THREE.Box3().setFromObject(child);\r\n        this.objectBoundingBoxCache[child.uuid] = boundingBox;\r\n      }\r\n\r\n      return this.raycaster.ray.intersectsBox(boundingBox);\r\n    });\r\n\r\n    if (object && object.userData && object.userData.eventSource)\r\n      this.click.emit({ node: object.userData as Node, eventSource: object.userData.eventSource });\r\n  }\r\n\r\n  /**\r\n   * Allows to reset position and zoom levels of the reaction pathway\r\n   */\r\n  @Method()\r\n  async zoomReset() {\r\n    const sceneCenter = new THREE.Box3().setFromObject(this.scene).getCenter(new THREE.Vector3());\r\n    this.controls.target.set(sceneCenter.x, sceneCenter.y, 0);\r\n    this.camera.zoom = 1;\r\n    this.camera.position.set(sceneCenter.x, sceneCenter.y, 200);\r\n    this.camera.updateProjectionMatrix();\r\n    this.controls.dispatchEvent({ type: \"change\" });\r\n  }\r\n\r\n  /**\r\n   * Allows to zoom in the reaction pathway\r\n   * @param {number} zoomSpeed - The zoom speed of the camera\r\n   */\r\n  @Method()\r\n  async zoomIn(zoomSpeed: number = CAMERA_ZOOM_SPEED) {\r\n    this.camera.zoom *= 1 + zoomSpeed;\r\n    this.camera.updateProjectionMatrix();\r\n    this.controls.dispatchEvent({ type: \"change\" });\r\n  }\r\n\r\n  /**\r\n   * Allows to zoom out the reaction pathway\r\n   * @param {number} zoomSpeed - The zoom speed of the camera\r\n   */\r\n  @Method()\r\n  async zoomOut(zoomSpeed: number = CAMERA_ZOOM_SPEED) {\r\n    this.camera.zoom *= 1 - zoomSpeed;\r\n    this.camera.updateProjectionMatrix();\r\n    this.controls.dispatchEvent({ type: \"change\" });\r\n  }\r\n\r\n  /**\r\n   * Loads the SVG icons of the reaction pathway component\r\n   * @todo Using async/await for loading the SVG icons is not the best solution\r\n   * preferably the SVG icons should be loaded in the build step\r\n   */\r\n  async loadSVGIcons() {\r\n    for (const icon of SVG_ICONS) {\r\n      await this.loadSVGIcon(icon);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Loads an SVG icon\r\n   * @param {string} icon - The icon\r\n   */\r\n  async loadSVGIcon(icon: SVGIconName) {\r\n    const svg = await fetch(getAssetPath(`./assets/${icon}.svg`)).then(response => response.text());\r\n    this.iconCache[icon] = svg;\r\n  }\r\n\r\n  /**\r\n   * Appends the label renderer to the container\r\n   * @param {number} width - The width of the container\r\n   * @param {number} height - The height of the container\r\n   */\r\n  appendLabelRendererToContainer(width: number, height: number) {\r\n    const labelRenderer = new CSS2DRenderer();\r\n    labelRenderer.setSize(width, height);\r\n    labelRenderer.domElement.style.position = \"absolute\";\r\n    labelRenderer.domElement.style.top = \"0\";\r\n    labelRenderer.domElement.style.pointerEvents = \"none\";\r\n    this.container.appendChild(labelRenderer.domElement);\r\n  }\r\n\r\n  /**\r\n   * Renders the reaction pathway\r\n   * @param {HierarchyPointNode<Node>} tree - The tree\r\n   * @todo Implement\r\n   */\r\n  renderReactionPathway(tree: HierarchyPointNode<Node>) {\r\n    // FIXME: This is a temporary fix for the width and height of the container\r\n    // The width and height should be calculated from the container's parent element\r\n    const width = window.innerWidth;\r\n    const height = window.innerHeight;\r\n\r\n    this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\r\n    this.renderer.setSize(width, height);\r\n    this.renderer.setClearColor(0x000000, 0);\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.scene = new THREE.Scene();\r\n    this.scene.background = new THREE.Color(getComputedStyle(this.element).getPropertyValue(\"--background-color\").trim());\r\n    this.fontLoader = new FontLoader();\r\n    this.helvetiker = this.fontLoader.parse(Helvetiker);\r\n    this.helvetikerBold = this.fontLoader.parse(HelvetikerBold);\r\n    this.raycaster = new THREE.Raycaster();\r\n    this.mouse = new THREE.Vector2();\r\n\r\n    tree\r\n      .descendants()\r\n      .filter(node => node.data.type === \"molecule\")\r\n      .forEach(node => this.renderMolecule(node as HierarchyPointNode<Molecule>));\r\n    tree\r\n      .descendants()\r\n      .filter(node => node.data.type === \"reaction\")\r\n      .forEach(node => this.renderReaction(node as HierarchyPointNode<Reaction>));\r\n\r\n    const sceneCenter = new THREE.Box3().setFromObject(this.scene).getCenter(new THREE.Vector3());\r\n\r\n    this.camera = new THREE.OrthographicCamera(-width / 2, width / 2, height / 2, -height / 2, 1, 1000);\r\n\r\n    this.addLigths();\r\n\r\n    this.container.appendChild(this.renderer.domElement);\r\n\r\n    // FIXME: Resolve initial positions\r\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\r\n    this.controls.enableRotate = this.enable3D;\r\n    this.controls.mouseButtons = { LEFT: THREE.MOUSE.PAN, RIGHT: THREE.MOUSE.ROTATE };\r\n    this.controls.screenSpacePanning = true;\r\n    this.appendLabelRendererToContainer(width, height);\r\n    this.controls.target.set(sceneCenter.x, sceneCenter.y, 0);\r\n    this.camera.position.set(sceneCenter.x, sceneCenter.y, 200);\r\n    this.camera.updateProjectionMatrix();\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.controls.addEventListener(\"change\", () => this.renderer.render(this.scene, this.camera));\r\n  }\r\n\r\n  /**\r\n   * Adds the lights to the scene\r\n   */\r\n  addLigths() {\r\n    const frontLight = new THREE.DirectionalLight(0xffffff, 1);\r\n    const backLight = new THREE.DirectionalLight(0xffffff, 1);\r\n    frontLight.position.set(0, 0, 1);\r\n    backLight.position.set(0, 0, -1);\r\n    this.scene.add(frontLight, backLight);\r\n  }\r\n\r\n  /**\r\n   * Renders a molecule\r\n   * @param {HierarchyPointNode<Molecule>} molecule - The molecule\r\n   * @todo Implement\r\n   */\r\n  renderMolecule(molecule: HierarchyPointNode<Molecule>) {\r\n    this.renderSmiles(molecule);\r\n    this.renderMoleculeScore(molecule);\r\n    this.renderMoleculeInventoryIcon(molecule);\r\n    this.renderHoneycomb(molecule);\r\n  }\r\n\r\n  /**\r\n   * Renders the score of a molecule\r\n   * @param {HierarchyPointNode<Molecule>} molecule - The molecule\r\n   * @todo Implement\r\n   */\r\n  renderMoleculeScore(molecule: HierarchyPointNode<Molecule>) {\r\n    if (!molecule.data.score || !this.displayScore || molecule.data.isInInventory) return;\r\n\r\n    const scoreObject3D = new THREE.Object3D();\r\n    const geometry = new TextGeometry(molecule.data.score, {\r\n      font: this.helvetikerBold,\r\n      size: 10,\r\n      height: 0,\r\n      curveSegments: 12,\r\n    });\r\n    const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--score-text-color\") });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    scoreObject3D.add(mesh);\r\n    const textWidth = new THREE.Box3().setFromObject(mesh).getSize(new THREE.Vector3()).x;\r\n    scoreObject3D.position.x = molecule.x - textWidth / 2;\r\n    // FIXME: This is a temporary fix for the y position of the score offset\r\n    scoreObject3D.position.y = molecule.y - molecule.data.boundingBox.y / 2;\r\n    scoreObject3D.userData = { ...molecule.data, eventSource: \"molecule_score\" };\r\n    this.scene.add(scoreObject3D);\r\n  }\r\n\r\n  /**\r\n   * Renders the inventory icon of a molecule if it is in the inventory\r\n   * @param {HierarchyPointNode<Molecule>} molecule - The molecule\r\n   */\r\n  renderMoleculeInventoryIcon(molecule: HierarchyPointNode<Molecule>) {\r\n    if (!molecule.data.isInInventory || !this.displayScore) return;\r\n\r\n    const svgIcon = this.iconCache[\"flask\"];\r\n    let object: THREE.Object3D;\r\n\r\n    if (this.iconObjectCache[\"flask\"]) {\r\n      object = this.iconObjectCache[\"flask\"].clone();\r\n    } else {\r\n      const data = this.svgLoader.parse(svgIcon);\r\n      object = new THREE.Object3D();\r\n      for (const path of data.paths) {\r\n        this.createLineShapes(path).forEach(mesh => object.add(mesh));\r\n        this.createSolidShapes(path).forEach(mesh => object.add(mesh));\r\n      }\r\n      object.rotation.z = Math.PI;\r\n      object.rotation.y = Math.PI;\r\n    }\r\n\r\n    const objectSize = new THREE.Box3().setFromObject(object).getSize(new THREE.Vector3());\r\n    const scalingFactor = INVENTORY_ICON_SIZE / Math.max(objectSize.x, objectSize.y);\r\n    object.position.x = molecule.x - (objectSize.x * scalingFactor) / 2;\r\n    object.position.y = molecule.y - objectSize.y * scalingFactor;\r\n    object.scale.set(scalingFactor, scalingFactor, 1);\r\n    object.userData = { ...molecule.data, eventSource: \"inventory_icon\" };\r\n    this.scene.add(object);\r\n  }\r\n\r\n  /**\r\n   * Renders the smiles of a molecule\r\n   * @param {HierarchyPointNode<Molecule>} molecule - The molecule\r\n   */\r\n  renderSmiles(molecule: HierarchyPointNode<Molecule>) {\r\n    const { smiles } = molecule.data;\r\n    const options = {\r\n      suppressChiralText: true,\r\n      suppressCIPParity: true,\r\n      suppressESR: true,\r\n      factorTextSize: 1,\r\n      noStereoProblem: true,\r\n    };\r\n    const svg = MoleculeLib.fromSmiles(smiles).toSVG(100, 150, \"svg\", options);\r\n    const data = this.svgLoader.parse(svg);\r\n    const textElements = Array.from(data.xml.children).filter(child => child.nodeName === \"text\") as SVGTextElement[];\r\n    const textObject3D = this.createTextObject3D(textElements);\r\n    const shapeObject3D = this.createSVGMeshObject3D(data.paths);\r\n\r\n    const smilesObject3D = new THREE.Object3D().add(shapeObject3D, textObject3D);\r\n    const smilesBoundingBox = new THREE.Box3().setFromObject(smilesObject3D);\r\n    const smilesBoundingBoxSize = new THREE.Vector3();\r\n    const smilesBoundingBoxCenter = new THREE.Vector3();\r\n\r\n    smilesBoundingBox.getSize(smilesBoundingBoxSize);\r\n    smilesBoundingBox.getCenter(smilesBoundingBoxCenter);\r\n\r\n    smilesObject3D.children.forEach(child => {\r\n      child.position.x = -smilesBoundingBoxCenter.x;\r\n      child.position.y = -smilesBoundingBoxCenter.y;\r\n    });\r\n\r\n    smilesObject3D.rotation.x = Math.PI;\r\n    smilesObject3D.rotation.y = 2 * Math.PI;\r\n\r\n    molecule.data.boundingBox = smilesBoundingBoxCenter;\r\n    smilesObject3D.position.x = molecule.x;\r\n    smilesObject3D.position.y = molecule.y;\r\n    smilesObject3D.userData = { ...molecule.data, eventSource: \"smiles\" };\r\n    this.scene.add(smilesObject3D);\r\n  }\r\n\r\n  /**\r\n   * Creates an object3D from an SVG text\r\n   * @param {SVGTextElement[]} textElements - The SVG text elements\r\n   * @returns {THREE.Object3D} The object3D\r\n   */\r\n  createTextObject3D(textElements: SVGTextElement[]): THREE.Object3D {\r\n    const object = new THREE.Object3D();\r\n\r\n    textElements.forEach(textElement => {\r\n      const fontSize = parseInt(textElement.attributes.getNamedItem(\"font-size\").nodeValue, 10);\r\n      const text = textElement.textContent;\r\n      const textWidth = this.calculateTextWidth(textElement);\r\n      const x = parseFloat(textElement.attributes.getNamedItem(\"x\").nodeValue) + textWidth / 2;\r\n      const y = parseFloat(textElement.attributes.getNamedItem(\"y\").nodeValue) + fontSize / 3;\r\n\r\n      const data = {\r\n        x,\r\n        y,\r\n        fontSize,\r\n        color: textElement.getAttribute(\"fill\"),\r\n        text,\r\n      };\r\n\r\n      const geometry = new TextGeometry(data.text, {\r\n        font: this.helvetiker,\r\n        size: data.fontSize * 0.7,\r\n        height: 0,\r\n        curveSegments: 12,\r\n      });\r\n\r\n      const material = new THREE.MeshBasicMaterial({ color: data.color });\r\n      const mesh = new THREE.Mesh(geometry, material);\r\n      const meshSize = new THREE.Box3().setFromObject(mesh).getSize(new THREE.Vector3());\r\n      mesh.position.set(data.x - meshSize.x / 2, data.y - fontSize / 3, 0);\r\n\r\n      mesh.rotation.x = Math.PI;\r\n      mesh.rotation.y = 2 * Math.PI;\r\n      object.add(mesh);\r\n    });\r\n\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Creates an object3D from an SVG path\r\n   * @param {SVGResultPaths[]} paths - The SVG paths\r\n   * @returns {THREE.Object3D} The object3D\r\n   */\r\n  createSVGMeshObject3D(paths: SVGResultPaths[]): THREE.Object3D {\r\n    const object = new THREE.Object3D();\r\n\r\n    for (const path of paths) {\r\n      this.createLineShapes(path).forEach(mesh => object.add(mesh));\r\n    }\r\n\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Creates line shapes from an SVG path\r\n   * @param {SVGResultPaths} path - The SVG path\r\n   * @returns {THREE.Mesh[]} The line shapes\r\n   */\r\n  createLineShapes(path: SVGResultPaths): THREE.Mesh[] {\r\n    const meshes = [];\r\n    const strokeColor = path.userData.style.stroke;\r\n    let renderOrder = 0;\r\n\r\n    if (strokeColor !== undefined && strokeColor !== \"none\") {\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setStyle(strokeColor),\r\n        opacity: path.userData.style.strokeOpacity,\r\n        transparent: path.userData.style.strokeOpacity < 1,\r\n        side: THREE.DoubleSide,\r\n        depthWrite: false,\r\n        wireframe: false,\r\n      });\r\n\r\n      for (const subPath of path.subPaths) {\r\n        const geometry = SVGLoader.pointsToStroke(subPath.getPoints(), path.userData.style);\r\n\r\n        if (geometry) {\r\n          const mesh = new THREE.Mesh(geometry, material);\r\n          mesh.renderOrder = renderOrder++;\r\n\r\n          meshes.push(mesh);\r\n        }\r\n      }\r\n    }\r\n\r\n    return meshes;\r\n  }\r\n\r\n  /**\r\n   * Creates solid shapes from an SVG path\r\n   * @param {SVGResultPaths} path - The SVG path\r\n   * @returns {THREE.Mesh[]} The solid shapes\r\n   */\r\n  createSolidShapes(path: SVGResultPaths): THREE.Mesh[] {\r\n    const meshes = [];\r\n    const fillColor = path.userData.style.fill;\r\n    let renderOrder = 0;\r\n\r\n    if (fillColor !== undefined && fillColor !== \"none\") {\r\n      const material = new THREE.MeshBasicMaterial({\r\n        color: new THREE.Color().setStyle(fillColor),\r\n        opacity: path.userData.style.fillOpacity,\r\n        transparent: path.userData.style.fillOpacity < 1,\r\n        side: THREE.DoubleSide,\r\n        depthWrite: false,\r\n        wireframe: false,\r\n      });\r\n\r\n      const shapes = SVGLoader.createShapes(path);\r\n\r\n      for (const shape of shapes) {\r\n        const geometry = new THREE.ShapeGeometry(shape);\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n        // FIXME: This is a temporary fix for the render order of the meshes\r\n        // The render order should be calculated from the z position of the meshes\r\n        mesh.renderOrder = fillColor === \"#F9C727\" ? 100 : 0 + renderOrder++;\r\n\r\n        meshes.push(mesh);\r\n      }\r\n    }\r\n\r\n    return meshes;\r\n  }\r\n\r\n  /**\r\n   * Renders a reaction node\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   */\r\n  renderReaction(reaction: HierarchyPointNode<Reaction>) {\r\n    this.renderReactionPath(reaction);\r\n    this.renderReactionReference(reaction);\r\n    this.renderReactionDetails(reaction);\r\n  }\r\n\r\n  /**\r\n   * Renders the reaction path of a reaction\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   */\r\n  renderReactionPath(reaction: HierarchyPointNode<Reaction>) {\r\n    if (!this.displayPathway) return;\r\n\r\n    const parent = reaction.parent as unknown as HierarchyPointNode<Molecule>;\r\n    const children = reaction.children as unknown as HierarchyPointNode<Molecule>[];\r\n\r\n    const positions = [];\r\n    const colors = [];\r\n    const color = new THREE.Color();\r\n    color.setHSL(0.0, 0.0, 0.73, THREE.SRGBColorSpace);\r\n\r\n    const parentX = parent.x - parent.data.boundingBox.x;\r\n    positions.push(parentX, parent.y, 0);\r\n    colors.push(color.r, color.g, color.b);\r\n    positions.push(reaction.x, reaction.y, 0);\r\n    colors.push(color.r, color.g, color.b);\r\n\r\n    const geometry = new LineGeometry();\r\n    geometry.setPositions(positions);\r\n    geometry.setColors(colors);\r\n\r\n    const lineMaterial = new LineMaterial({\r\n      color: 0xffffff,\r\n      linewidth: 1,\r\n      vertexColors: true,\r\n      dashed: false,\r\n      alphaToCoverage: false,\r\n    });\r\n\r\n    lineMaterial.resolution.set(500, 500);\r\n\r\n    const line = new Line2(geometry, lineMaterial);\r\n    line.computeLineDistances();\r\n    line.scale.set(1, 1, 1);\r\n    this.scene.add(line);\r\n\r\n    const arrowTip = new THREE.ConeGeometry(2, 5, 3);\r\n    const arrowTipMaterial = new THREE.MeshBasicMaterial({ color });\r\n    const arrowTipMesh = new THREE.Mesh(arrowTip, arrowTipMaterial);\r\n    arrowTipMesh.position.set(parentX, parent.y, 0);\r\n    arrowTipMesh.rotation.z = -Math.PI / 2;\r\n    this.scene.add(arrowTipMesh);\r\n\r\n    for (const child of children) {\r\n      this.createReactionJoinLine(reaction, child);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the reaction corner line of a reaction\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   * @param {HierarchyPointNode<Molecule>} molecule - The molecule\r\n   */\r\n  createReactionJoinLine(reaction: HierarchyPointNode<Reaction>, molecule: HierarchyPointNode<Molecule>) {\r\n    const sourceX = reaction.x;\r\n    const sourceY = reaction.y;\r\n    const targetX = molecule.x + molecule.data.boundingBox.x + HEXAGON_RADIUS * 2;\r\n    const targetY = molecule.y;\r\n\r\n    const horizontalRadiusDirection = targetX - sourceX > 0 ? 1 : -1;\r\n    const verticalRadiusDirection = targetY === sourceY ? 0 : targetY - sourceY > 0 ? 1 : -1;\r\n    const radius = Math.abs(sourceX - targetX) / 2 < LINE_CURVE_RADIUS ? Math.abs(sourceX - targetX) / 2 : LINE_CURVE_RADIUS;\r\n\r\n    const positions = [];\r\n    const colors = [];\r\n    const color = new THREE.Color();\r\n    color.setHSL(0.0, 0.0, 0.73, THREE.SRGBColorSpace);\r\n\r\n    positions.push(sourceX, sourceY, 0);\r\n    colors.push(color.r, color.g, color.b);\r\n    positions.push(sourceX + radius * horizontalRadiusDirection, sourceY, 0);\r\n    colors.push(color.r, color.g, color.b);\r\n    positions.push(sourceX + radius * horizontalRadiusDirection, targetY - radius * verticalRadiusDirection, 0);\r\n    colors.push(color.r, color.g, color.b);\r\n\r\n    const cornerCurve = new THREE.QuadraticBezierCurve3(\r\n      new THREE.Vector3(sourceX + radius * horizontalRadiusDirection, targetY - radius * verticalRadiusDirection, 0),\r\n      new THREE.Vector3(sourceX + radius * horizontalRadiusDirection, targetY, 0),\r\n      new THREE.Vector3(sourceX + 2 * radius * horizontalRadiusDirection, targetY, 0),\r\n    );\r\n\r\n    cornerCurve.getPoints(50).forEach(point => {\r\n      positions.push(point.x, point.y, point.z);\r\n      colors.push(color.r, color.g, color.b);\r\n    });\r\n\r\n    positions.push(targetX, targetY, 0);\r\n    colors.push(color.r, color.g, color.b);\r\n\r\n    const geometry = new LineGeometry();\r\n    geometry.setPositions(positions);\r\n    geometry.setColors(colors);\r\n\r\n    const lineMaterial = new LineMaterial({\r\n      color: 0xffffff,\r\n      linewidth: 1,\r\n      vertexColors: true,\r\n      dashed: false,\r\n      alphaToCoverage: false,\r\n    });\r\n\r\n    lineMaterial.resolution.set(500, 500);\r\n\r\n    const line = new Line2(geometry, lineMaterial);\r\n    line.computeLineDistances();\r\n    line.scale.set(1, 1, 1);\r\n    this.scene.add(line);\r\n  }\r\n\r\n  /**\r\n   * Renders the honeycomb of a molecule\r\n   * @param {HierarchyPointNode<Molecule>} molecule - The molecule\r\n   */\r\n  renderHoneycomb(molecule: HierarchyPointNode<Molecule>) {\r\n    if (!this.displayHoneycomb) return;\r\n    const { isProtected, isRegulated, publishedMoleculeCount: publishedMoleculeCount } = molecule.data;\r\n\r\n    const count = (isProtected ? 1 : 0) + (isRegulated ? 1 : 0) + (publishedMoleculeCount ? 1 : 0);\r\n    if (count === 0) return;\r\n\r\n    const isUpwards = molecule.parent !== null ? molecule.y > molecule.parent.y : false;\r\n    const moleculeRightEdge = molecule.x + molecule.data.boundingBox.x;\r\n\r\n    const coordinates = this.createHoneycombCoordinates({ x: moleculeRightEdge, y: molecule.y }, 10, count, isUpwards);\r\n    const hexagonObject = new THREE.Object3D();\r\n    const geometry = new THREE.CircleGeometry(HEXAGON_RADIUS, 6);\r\n    const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--honeycomb-border-color\") });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n\r\n    const innerGeometry = new THREE.CircleGeometry(HEXAGON_RADIUS - 2, 6);\r\n    const innerMaterial = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--honeycomb-color\") });\r\n    const innerMesh = new THREE.Mesh(innerGeometry, innerMaterial);\r\n    mesh.rotation.z = Math.PI / 2;\r\n    mesh.position.z = 1;\r\n    innerMesh.rotation.z = Math.PI / 2;\r\n    innerMesh.position.z = 2;\r\n    hexagonObject.add(mesh, innerMesh);\r\n\r\n    if (publishedMoleculeCount) {\r\n      const { x, y } = coordinates.shift();\r\n      const object = hexagonObject.clone();\r\n      object.position.set(x + HEXAGON_RADIUS, y, 1);\r\n      object.userData = { ...molecule.data, eventSource: \"published_molecule_icon\" };\r\n      this.scene.add(object);\r\n\r\n      this.renderHoneycombIcon(\"book\", { x, y });\r\n      this.renderHoneycombBadge({ x, y }, molecule.data.publishedMoleculeCount.toString());\r\n    }\r\n\r\n    if (isProtected) {\r\n      const { x, y } = coordinates.shift();\r\n      const object = hexagonObject.clone();\r\n      object.position.set(x + HEXAGON_RADIUS, y, 1);\r\n      object.userData = { ...molecule.data, eventSource: \"protected_icon\" };\r\n      this.scene.add(object);\r\n      this.renderHoneycombIcon(\"shield\", { x, y });\r\n    }\r\n\r\n    if (isRegulated) {\r\n      const { x, y } = coordinates.shift();\r\n      const object = hexagonObject.clone();\r\n      object.position.set(x + HEXAGON_RADIUS, y, 1);\r\n      object.userData = { ...molecule.data, eventSource: \"regulated_icon\" };\r\n      this.scene.add(object);\r\n      this.renderHoneycombIcon(\"exclamation\", { x, y });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the honeycomb icon of a molecule\r\n   * @param {Coordinate} coordinate - The coordinate\r\n   * @todo Implement the icon caching to improve performance\r\n   */\r\n  renderHoneycombIcon(icon: SVGIconName, coordinate: Coordinate) {\r\n    const svgIcon = this.iconCache[icon];\r\n    let object: THREE.Object3D;\r\n\r\n    if (object) object = this.iconObjectCache[icon].clone();\r\n    else {\r\n      const data = this.svgLoader.parse(svgIcon);\r\n      object = new THREE.Object3D();\r\n      for (const path of data.paths) {\r\n        this.createLineShapes(path).forEach(mesh => object.add(mesh));\r\n        this.createSolidShapes(path).forEach(mesh => object.add(mesh));\r\n      }\r\n\r\n      object.rotation.z = Math.PI;\r\n      object.rotation.y = Math.PI;\r\n    }\r\n\r\n    const objectSize = new THREE.Box3().setFromObject(object).getSize(new THREE.Vector3());\r\n    const scalingFactor = HEXAGON_RADIUS / Math.max(objectSize.x, objectSize.y);\r\n    object.position.x = coordinate.x + HEXAGON_RADIUS - (objectSize.x * scalingFactor) / 2;\r\n    object.position.y = coordinate.y + (objectSize.y * scalingFactor) / 2;\r\n    object.position.z = 4;\r\n    object.scale.set(scalingFactor, scalingFactor, 1);\r\n\r\n    this.scene.add(object);\r\n  }\r\n\r\n  /**\r\n   * Creates the coordinates of a honeycomb\r\n   * @param {Coordinate} initial - The initial coordinate\r\n   * @param {number} radius - The radius of the honeycomb\r\n   * @param {number} n - The number of hexagons\r\n   * @returns {Coordinate[]} The coordinates of the honeycomb\r\n   */\r\n  createHoneycombCoordinates(initial: Coordinate, radius: number, n: number, calculateUpwards: boolean = false): Coordinate[] {\r\n    const coordinates: Coordinate[] = [initial];\r\n    const sqrt = Math.sqrt(1);\r\n    const directionMultiplier = calculateUpwards ? -1 : 1;\r\n\r\n    for (let index = 0; index < n - 1; index++) {\r\n      const x = coordinates[index].x + (index % 2 === 0 ? 1 : -1) * radius * sqrt;\r\n      const y = coordinates[index].y - 1.5 * radius * directionMultiplier;\r\n      coordinates.push({ x, y });\r\n    }\r\n\r\n    return coordinates;\r\n  }\r\n\r\n  /**\r\n   * Renders the honeycomb badge of a molecule\r\n   * @param {Coordinate} coordinate - The coordinate\r\n   * @param {string} text - The text\r\n   */\r\n  renderHoneycombBadge(coordinate: Coordinate, text: string) {\r\n    const x = coordinate.x + 2 * HEXAGON_RADIUS;\r\n    const y = coordinate.y + HEXAGON_RADIUS / 2;\r\n    const geometry = new THREE.CircleGeometry(HONEYCOMB_BADGE_RADIUS, 32);\r\n    const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--badge-outline-color\") });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    mesh.position.set(x, y, 4);\r\n\r\n    const innerGeometry = new THREE.CircleGeometry(HONEYCOMB_BADGE_RADIUS * 0.9, 32);\r\n    const innerMaterial = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--badge-color\") });\r\n    const innerMesh = new THREE.Mesh(innerGeometry, innerMaterial);\r\n    innerMesh.position.set(x, y, 5);\r\n\r\n    const textGeometry = new TextGeometry(text, {\r\n      font: this.helvetikerBold,\r\n      size: 2.5,\r\n      height: 0,\r\n      curveSegments: 12,\r\n    });\r\n    const textMaterial = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--badge-text-color\") });\r\n    const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n    const textSize = new THREE.Box3().setFromObject(textMesh).getSize(new THREE.Vector3());\r\n    // FIXME: This is a temporary fix for the x and y position of the text offset\r\n    // The x and y position should be calculated from the text size\r\n    textMesh.position.set(x - textSize.x / 2, y - textSize.y / 2, 6);\r\n\r\n    this.scene.add(mesh, innerMesh, textMesh);\r\n  }\r\n\r\n  /**\r\n   * Renders the reaction name of a reaction and its condition\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   */\r\n  renderReactionDetails(reaction: HierarchyPointNode<Reaction>) {\r\n    const conditionObject = this.createReactionCondition3DObject(reaction);\r\n\r\n    if (this.displayReactionName && reaction.data.name) {\r\n      const { name } = reaction.data;\r\n      const distance = Math.abs(reaction.parent !== null ? reaction.x - reaction.parent.x : 0);\r\n      const lines = this.linebreakText(name, distance, 6, 10);\r\n      const conditionHeight = conditionObject ? new THREE.Box3().setFromObject(conditionObject).getSize(new THREE.Vector3()).y : 0;\r\n\r\n      lines.forEach((line, index, initial) => {\r\n        const geometry = new TextGeometry(line, {\r\n          font: this.helvetikerBold,\r\n          size: 6,\r\n          height: 0,\r\n          curveSegments: 12,\r\n        });\r\n        const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--reaction-name-color\") });\r\n        const mesh = new THREE.Mesh(geometry, material);\r\n        const meshSize = new THREE.Box3().setFromObject(mesh).getSize(new THREE.Vector3());\r\n        const x = reaction.x + 8;\r\n        const y = reaction.y + meshSize.y / 2 + 15 + conditionHeight + (initial.length - 1 - index) * 10;\r\n        mesh.position.set(x, y, 10);\r\n        mesh.userData = { ...reaction.data, eventSource: \"reaction_name\" };\r\n        this.scene.add(mesh);\r\n      });\r\n    }\r\n\r\n    if (conditionObject) {\r\n      conditionObject.userData = { ...reaction.data, eventSource: \"reaction_condition\" };\r\n      this.scene.add(conditionObject);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Creates the reaction condition of a reaction\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   * @returns {THREE.Object3D} The object3D\r\n   */\r\n  createReactionCondition3DObject(reaction: HierarchyPointNode<Reaction>): THREE.Object3D {\r\n    if (!this.displayReactionCondition || !reaction.data.condition) return;\r\n\r\n    const object = new THREE.Object3D();\r\n    const distance = Math.abs(reaction.parent !== null ? reaction.x - reaction.parent.x : 0);\r\n    const lines = this.linebreakText(reaction.data.condition, distance, 5, 20);\r\n\r\n    lines.forEach((line, index, initial) => {\r\n      const geometry = new TextGeometry(line, {\r\n        font: this.helvetiker,\r\n        size: 5,\r\n        height: 0,\r\n        curveSegments: 12,\r\n      });\r\n\r\n      const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--reaction-condition-color\") });\r\n      const mesh = new THREE.Mesh(geometry, material);\r\n      mesh.position.set(reaction.x + 8, reaction.y + 10 + (initial.length - 1 - index) * 10, 10);\r\n\r\n      object.add(mesh);\r\n    });\r\n\r\n    return object;\r\n  }\r\n\r\n  /**\r\n   * Breaks a text into lines\r\n   * @param {string} text - The text\r\n   * @param {number} width - The width of the text\r\n   * @param {number} fontSize - The font size of the text\r\n   * @param {number} padding - The padding of the text\r\n   * @returns {string[]} The result\r\n   */\r\n  linebreakText(text: string, width: number, fontSize: number, padding: number = 0): string[] {\r\n    const words = text.split(\" \");\r\n    const result = words.reduce(\r\n      (acc, word) => {\r\n        const { lines, currentLine } = acc;\r\n\r\n        // FIXME: This is a temporary fix for the width of the text\r\n        if ((currentLine + word).length * fontSize >= width - padding) {\r\n          lines.push(currentLine.trim());\r\n          acc.currentLine = \"\";\r\n        }\r\n\r\n        acc.currentLine += `${word} `;\r\n        return acc;\r\n      },\r\n      { lines: [], currentLine: \"\" },\r\n    );\r\n\r\n    result.lines.push(result.currentLine.trim());\r\n    return result.lines;\r\n  }\r\n\r\n  /**\r\n   * Renders the reaction reference of a reaction\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   */\r\n  renderReactionReference(reaction: HierarchyPointNode<Reaction>) {\r\n    if (!this.displayReactionReference) return;\r\n\r\n    if (reaction.data.doi) this.renderReactionReferenceDOI(reaction);\r\n\r\n    if (reaction.data.score) this.renderReactionReferenceIcon(reaction);\r\n  }\r\n\r\n  /**\r\n   * Renders the DOI of a reaction reference\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   */\r\n  renderReactionReferenceDOI(reaction: HierarchyPointNode<Reaction>) {\r\n    const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--reaction-doi-color\") });\r\n    const doi = reaction.data.doi;\r\n\r\n    const geometry = new TextGeometry(doi, {\r\n      font: this.helvetiker,\r\n      size: 6,\r\n      height: 0,\r\n      curveSegments: 12,\r\n    });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    // FIXME: This is a temporary fix for the x and y position of the text offset\r\n    mesh.position.set(reaction.x + 7, reaction.y - 15, 10);\r\n\r\n    const textWidth = new THREE.Box3().setFromObject(mesh).getSize(new THREE.Vector3()).x;\r\n    const underlineGeometry = new THREE.PlaneGeometry(textWidth, 0.5);\r\n    const underlineMesh = new THREE.Mesh(underlineGeometry, material);\r\n    // FIXME: This is a temporary fix for the x and y position of the underline offset\r\n    underlineMesh.position.set(mesh.position.x + textWidth / 2 + 2, mesh.position.y - 2, 10);\r\n    mesh.userData = { ...reaction.data, eventSource: \"doi\" };\r\n    this.scene.add(mesh, underlineMesh);\r\n  }\r\n\r\n  /**\r\n   * Renders the book icon under a reaction node\r\n   * @param {HierarchyPointNode<Reaction>} reaction - The reaction\r\n   */\r\n  renderReactionReferenceIcon(reaction: HierarchyPointNode<Reaction>) {\r\n    const score = reaction.data.score;\r\n    const svgIcon = this.iconCache[`reference_${score}`];\r\n\r\n    let object: THREE.Object3D;\r\n\r\n    if (this.iconObjectCache[`reference_${score}`]) {\r\n      object = this.iconObjectCache[`reference_${score}`].clone();\r\n    } else {\r\n      const data = this.svgLoader.parse(svgIcon);\r\n      object = new THREE.Object3D();\r\n\r\n      for (const path of data.paths) {\r\n        this.createLineShapes(path).forEach(mesh => object.add(mesh));\r\n        this.createSolidShapes(path).forEach(mesh => object.add(mesh));\r\n      }\r\n\r\n      const objectSize = new THREE.Box3().setFromObject(object).getSize(new THREE.Vector3());\r\n      const scalingFactor = REFERENCE_ICON_SIZE / Math.max(objectSize.x, objectSize.y);\r\n      object.scale.set(scalingFactor, scalingFactor, 1);\r\n\r\n      object.rotation.z = Math.PI;\r\n      object.userData = { ...reaction.data, eventSource: \"published_reactions_icon\" };\r\n      this.iconObjectCache[`reference_${score}`] = object;\r\n    }\r\n\r\n    const objectSize = new THREE.Box3().setFromObject(object).getSize(new THREE.Vector3());\r\n    const doiPadding = reaction.data.doi ? 10 : 0;\r\n    object.position.set(reaction.x + objectSize.x * 1.25, reaction.y - objectSize.y / 2 - doiPadding - 2, 10);\r\n    this.scene.add(object);\r\n    if (reaction.data.reactionCount) {\r\n      this.renderReactionReferenceIconBadge(\r\n        { x: object.position.x - objectSize.x / 2, y: object.position.y - objectSize.y / 2 },\r\n        reaction.data.reactionCount.toString(),\r\n      );\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Renders the badge of a reaction reference\r\n   * @param {Coordinate} coordinate - The coordinate\r\n   * @param {string} text - The text\r\n   */\r\n  renderReactionReferenceIconBadge(coordinate: Coordinate, text: string) {\r\n    const geometry = new THREE.CircleGeometry(HONEYCOMB_BADGE_RADIUS + 2, 32);\r\n    const material = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--badge-outline-color\") });\r\n    const mesh = new THREE.Mesh(geometry, material);\r\n    const geometrySize = new THREE.Box3().setFromObject(mesh).getSize(new THREE.Vector3());\r\n    const x = coordinate.x + (2 * HONEYCOMB_BADGE_RADIUS + 2) / 2 + geometrySize.x / 1.5;\r\n    const y = coordinate.y - (2 * HONEYCOMB_BADGE_RADIUS + 2) / 2 - geometrySize.y / 3;\r\n\r\n    const innerGeometry = new THREE.CircleGeometry(HONEYCOMB_BADGE_RADIUS + 2 * 0.9, 32);\r\n    const innerMaterial = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--badge-color\") });\r\n    const innerMesh = new THREE.Mesh(innerGeometry, innerMaterial);\r\n    innerMesh.position.set(x, y, 11);\r\n    mesh.position.x = x;\r\n    mesh.position.y = y;\r\n    mesh.position.z = 10;\r\n\r\n    const textGeometry = new TextGeometry(text, {\r\n      font: this.helvetikerBold,\r\n      size: 4,\r\n      height: 0,\r\n      curveSegments: 12,\r\n    });\r\n\r\n    const textMaterial = new THREE.MeshBasicMaterial({ color: this.getCSSVariableValue(\"--badge-text-color\") });\r\n    const textMesh = new THREE.Mesh(textGeometry, textMaterial);\r\n    const textSize = new THREE.Box3().setFromObject(textMesh).getSize(new THREE.Vector3());\r\n    textMesh.position.set(x - textSize.x / 2, y - textSize.y / 2, 12);\r\n    this.scene.add(mesh, innerMesh, textMesh);\r\n  }\r\n\r\n  /**\r\n   * Calculates the width of a text\r\n   * @param {SVGTextElement} text - The text\r\n   * @returns {number} The width of the text\r\n   * @todo Move to a utility class\r\n   */\r\n  calculateTextWidth(text: SVGTextElement): number {\r\n    const svgNamespace = \"http://www.w3.org/2000/svg\";\r\n    const element = document.createElementNS(svgNamespace, \"svg\");\r\n\r\n    element.style.display = \"block\";\r\n    element.style.opacity = \"0\";\r\n    element.style.position = \"absolute\";\r\n    element.appendChild(text);\r\n\r\n    document.body.appendChild(element);\r\n    const width = element.getBBox().width;\r\n    document.body.removeChild(element);\r\n\r\n    return width;\r\n  }\r\n\r\n  /**\r\n   * Gets the value of a CSS variable\r\n   * @param {string} variable - The variable\r\n   * @returns {string} The value of the variable\r\n   */\r\n  getCSSVariableValue(variable: string): string {\r\n    return getComputedStyle(this.element).getPropertyValue(variable);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        class=\"container\"\r\n        ref={element => {\r\n          this.container = element;\r\n        }}\r\n      ></div>\r\n    );\r\n  }\r\n}\r\n"]}